bool exists(const vector<int> &arr, int x) {
    ll low = -1, high = arr.size();
    while (high > low + 1) {
        ll mid = (high + low) / 2;
        if (arr[mid] == x)
            return true;
        else if (arr[mid] > x)
            high = mid;
        else
            low = mid;
    }
    return false;
}

vector<int> searchRange(const vector<int> &arr, int x) {
    ll low = -1, high = arr.size();
    int x1, x2;
    if (!exists(arr, x))
        return {-1, -1};
    while (high > low + 1) {
        ll mid = (high + low) / 2;
        if (arr[mid] >= x)
            high = mid;
        else
            low = mid;
    }
    x1 = high;

    low = -1, high = arr.size();
    while (high > low + 1) {
        ll mid = (high + low) / 2;
        if (arr[mid] <= x)
            low = mid;
        else
            high = mid;
    }
    x2 = low;
    return {x1, x2};
}
